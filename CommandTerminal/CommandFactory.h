#ifndef __COMMANDFACTORY_H__
#define __COMMANDFACTORY_H__

#include "Commands.h"

#include <string>

class CommandFactory
{
public:
    CommandFactory() { };
    ~CommandFactory() { };

    typedef enum {
        eAT,
        eATI,
        eATZ,
        eATE,
        eATVERBOSE,
        eATK,
        eATF,
        eATW,
        eATV,
        eATS,
        eATR,
        eIPR,
        eDIPR,
        eSMODE,
        eDFREQ,
        eFREQ,
        eFSB,
        ePN,
        eDI,
        eDC,
        eLBT,
        eAP,
        eNA,
        eNSK,
        eDSK,
        eULC,
        eDLC,
        eSS,
        eRS,
        eNK,
        eNI,
        eGK,
        eJD,
        eJOIN,
        eJR,
        eJN,
        eJNV,
        eNJM,
        ePS,
        eNJS,
        eNLC,
        eLCC,
        eLCT,
        eENC,
        eRSSI,
        eSNR,
        eDP,
        eSDR,
        eCHM,
        eTXDR,
        eTXP,
        eANT,
        eTXF,
        eFO,
        eTXW,
        eTXCH,
        eTXN,
        eTXS,
        eTOA,
        eMCRX,
        eRXD,
        eRXO,
        eCRC,
        eADR,
        eACK,
        eREP,
        ePP,
        eMAC,
        eSEND,
        eSENDB,
        eRECV,
        eURC,
        eLW,
        eSD,
        eSLEEP,
        eSDCE,
        eWM,
        eWI,
        eWP,
        eWD,
        eWTO,
        ePING,
        eFOTA,
        eLOG,
        eGPSTIME,
        eBLS,
        eBAT,
        eLBTRSSI,
        ePRINT_TEST,
        eRXDR,
        eSENDI,
        eSENDC,
        eMEM,
#if defined(TARGET_MTS_MDOT_F411RE)
        eREPAIR,
#endif
        eATWP,
        eDREGS,
#ifdef MTS_RADIO_DEBUG_COMMANDS
        ePRINT_DEBUG,
        eERASE,
        eDD,
        eRXF,
        eRECVC,
#endif
        NUMBER_OF_CMDS
    } CmdId_t;

    static Command* Create(CmdId_t cmd);
};
#endif
